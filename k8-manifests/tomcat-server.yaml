---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tomcat-server
  namespace: jp-test
  labels:
    app: tomcat-server
data:
  username: Jibran
---
apiVersion: v1
kind: Secret
metadata:
  name:  tomcat-server
  namespace: jp-test
  labels:
    app: tomcat-server
data:
   password: VEhJU0lTc2VjdXJlZFBhc3NXb1Jk
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-server
  namespace: jp-test
spec:
  selector:
    app: tomcat-server
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tomcat-server
  namespace: jp-test
  labels:
    type: local
    name: tomcat-server
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  hostPath:
    path: "/mnt/data/tomcat"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tomcat-server
  namespace: jp-test
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
     storage: 10Gi
  selector:
    matchLabels:
      name: tomcat-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-server
  namespace: jp-test
spec:
  selector:
    matchLabels:
      app: tomcat-server
  template:
    metadata:
      labels:
        app: tomcat-server
    spec:
      containers:
      - name: tomcat-server
        image: docker.io/tomcat
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "512Mi"
            cpu: "100m"
          requests:
            memory: "512Mi"
            cpu: "100m"
        ports:
          - containerPort: 8080
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        env:
        - name: USERNAME
          valueFrom:
            configMapKeyRef:
              name: tomcat-server
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: tomcat-server
              key: password
        volumeMounts:
        - mountPath: /tomcat-server
          name: tomcat-server
      volumes:
      - name: tomcat-server
        persistentVolumeClaim:
          claimName: tomcat-server
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tomcat-server
  namespace: jp-test
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tomcat-server
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 20